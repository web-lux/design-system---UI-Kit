@use "sass:map";
@use "./colors" as c;
@use "./utils" as utils;

$default: c.$primary;
$hovered: #ae60eb;
$pressed: #6a17ab;
$disabled: c.$disabled;

$buttons: (
	"large": (
		"prefix": "l",
		"padding": 12px 24px,
		"font-size": 18px,
	),
	"medium": (
		"prefix": "m",
		"padding": 8px 16px,
		"font-size": 16px,
	),
	"small": (
		"prefix": "s",
		"padding": 4px 8px,
		"font-size": 14px,
	),
);

@mixin color-state() {
	--color: #{$default};

	&:hover {
		--color: #{$hovered};
	}

	&:active {
		--color: #{$pressed};
	}

	&:disabled {
		--color: #{$disabled};
	}
}

@mixin button($type) {
	@include color-state();
	border-radius: 4px;

	@if $type == "primary" {
		background-color: var(--color);
		color: c.$white;
	}

	@if $type == "secondary" {
		background-color: transparent;
		color: var(--color);
		border: solid 1px var(--color);
	}
}

@mixin icon($type) {
	display: inline-flex;
	align-items: center;
	gap: 8px;

	&::before {
		$size: 18px;
		content: "";
		width: $size;
		height: $size;
		display: inline-block;
		mask: url(/public/save.svg) no-repeat 50% 50%;
		mask-size: cover;

		@if $type == "primary" {
			background-color: c.$white;
		} @else if $type == "secondary" {
			background-color: var(--color);
		}
	}
}

@each $size, $properties in $buttons {
	.btn-#{map.get($properties, "prefix")} {
		$type: "primary";
		@include button($type);
		padding: map-get($properties, "padding");
		font-size: map-get($properties, "font-size");

		&.btn-icon {
			@include icon($type);
		}
	}
}

.btn-secondary {
	$type: "secondary";
	@include button($type);

	&.btn-icon {
		@include icon($type);
	}
}

.btn-text {
	@include color-state();
	@include icon("secondary");
	cursor: pointer;
	color: var(--color);
}

.link {
	$default: c.$link;
	$hovered: #1a15d3;
	$pressed: #0f0c9e;
	color: $default;

	&:hover {
		color: $hovered;
	}

	&:active {
		color: $pressed;
	}
}
